<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ucar.zkdoctor.dao.mysql.ClusterStateDao">

    <sql id="cluster_state_fields">
        id,cluster_id clusterId,instance_number instanceNumber,avg_latency_max avgLatencyMax,max_latency_max maxLatencyMax,min_latency_max minLatencyMax,received_total receivedTotal,sent_total sentTotal,
        connection_total connectionTotal,znode_count znodeCount,watcher_total watcherTotal,ephemerals,outstanding_total outstandingTotal,approximate_data_size approximateDataSize,
        open_file_descriptor_count_total openFileDescriptorCountTotal,create_time createTime,modify_time modifyTime,param1
    </sql>

    <sql id="cluster_state_insert_fields">
        id,cluster_id,instance_number,avg_latency_max,max_latency_max,min_latency_max,received_total,sent_total,
        connection_total,znode_count,watcher_total,ephemerals,outstanding_total,approximate_data_size,
        open_file_descriptor_count_total,create_time,modify_time,param1
    </sql>

    <sql id="cluster_state_log_fields">
         id,cluster_id clusterId,instance_number instanceNumber,avg_latency_max avgLatencyMax,max_latency_max maxLatencyMax,min_latency_max minLatencyMax,received_total receivedTotal,sent_total sentTotal,
        connection_total connectionTotal,znode_count znodeCount,watcher_total watcherTotal,ephemerals,outstanding_total outstandingTotal,approximate_data_size approximateDataSize,
        open_file_descriptor_count_total openFileDescriptorCountTotal,create_time createTime
    </sql>

    <sql id="cluster_state_log_insert_fields">
        cluster_id,instance_number,avg_latency_max,max_latency_max,min_latency_max,received_total,sent_total,
        connection_total,znode_count,watcher_total,ephemerals,outstanding_total,approximate_data_size,
        open_file_descriptor_count_total,create_time
    </sql>

    <insert id="insertClusterState" parameterType="com.ucar.zkdoctor.pojo.po.ClusterState" keyProperty="id"
            useGeneratedKeys="true">
        INSERT INTO zk_cluster_state
        (<include refid="cluster_state_insert_fields"/>)
        VALUES
        (#{id},#{clusterId},#{instanceNumber},#{avgLatencyMax},#{maxLatencyMax},#{minLatencyMax},#{receivedTotal},#{sentTotal},#{connectionTotal},#{znodeCount},
        #{watcherTotal},#{ephemerals},#{outstandingTotal},#{approximateDataSize},#{openFileDescriptorCountTotal},#{createTime},#{modifyTime},#{param1})
        ON DUPLICATE KEY UPDATE
        cluster_id = #{clusterId},
        instance_number = #{instanceNumber},
        max_latency_max = #{maxLatencyMax},
        min_latency_max = #{minLatencyMax},
        received_total = #{receivedTotal},
        sent_total = #{sentTotal},
        connection_total = #{connectionTotal},
        znode_count = #{znodeCount},
        watcher_total = #{watcherTotal},
        ephemerals = #{ephemerals},
        outstanding_total = #{outstandingTotal},
        approximate_data_size = #{approximateDataSize},
        open_file_descriptor_count_total = #{openFileDescriptorCountTotal},
        modify_time = #{modifyTime},
        param1 = #{param1};
    </insert>

    <select id="getClusterStateByClusterId" resultType="com.ucar.zkdoctor.pojo.po.ClusterState" parameterType="int">
        SELECT
        <include refid="cluster_state_fields"/>
        FROM zk_cluster_state
        WHERE cluster_id = #{clusterId};
    </select>

    <delete id="deleteClusterStateByClusterId" parameterType="int">
        DELETE FROM zk_cluster_state WHERE cluster_id = #{clusterId};
    </delete>

    <insert id="batchInsertClusterStateLogs" parameterType="list" useGeneratedKeys="true">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        INSERT INTO zk_cluster_state_log
        (<include refid="cluster_state_log_insert_fields"/>)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.clusterId},#{item.instanceNumber},#{item.avgLatencyMax},#{item.maxLatencyMax},#{item.minLatencyMax},#{item.receivedTotal},#{item.sentTotal},
            #{item.connectionTotal},#{item.znodeCount},#{item.watcherTotal},#{item.ephemerals},#{item.outstandingTotal},#{item.approximateDataSize},
            #{item.openFileDescriptorCountTotal},#{item.createTime})
        </foreach>
    </insert>

    <insert id="insertClusterStateLogs" parameterType="com.ucar.zkdoctor.pojo.po.ClusterState" keyProperty="id"
            useGeneratedKeys="true">
        INSERT INTO zk_cluster_state_log
        (<include refid="cluster_state_log_insert_fields"/>)
        VALUES
        (#{clusterId},#{instanceNumber},#{avgLatencyMax},#{maxLatencyMax},#{minLatencyMax},#{receivedTotal},#{sentTotal},
        #{connectionTotal},#{znodeCount},#{watcherTotal},#{ephemerals},#{outstandingTotal},#{approximateDataSize},
        #{openFileDescriptorCountTotal},#{createTime})
    </insert>

    <select id="getClusterStateLogByClusterId" resultType="com.ucar.zkdoctor.pojo.po.ClusterState">
        SELECT
        <include refid="cluster_state_log_fields"/>
        <![CDATA[ FROM zk_cluster_state_log WHERE cluster_id = #{clusterId} AND create_time >= #{startDate} AND create_time <= #{endDate} ]]>
    </select>

    <delete id="cleanClusterStateLogData" parameterType="date">
        <![CDATA[ DELETE FROM zk_cluster_state_log WHERE create_time < #{endDate} limit 1000 ]]>
    </delete>

    <select id="cleanClusterStateLogCount" resultType="java.lang.Long" parameterType="date">
        <![CDATA[ SELECT COUNT(*) FROM zk_cluster_state_log WHERE create_time < #{endDate} ]]>
    </select>
</mapper>